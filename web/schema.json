{
    "openapi": "3.0.3",
    "info": {
        "title": "Curdle",
        "version": "1.0.0",
        "description": "Curdle API"
    },
    "paths": {
        "/api/games/": {
            "post": {
                "operationId": "api_games_create",
                "tags": [
                    "games"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Game"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/games/{id}/": {
            "get": {
                "operationId": "api_games_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this game.",
                        "required": true
                    }
                ],
                "tags": [
                    "games"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Game"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/guesses/": {
            "post": {
                "operationId": "api_guesses_create",
                "tags": [
                    "games"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/GuessRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/GuessRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/GuessRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Guess"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/schema/": {
            "get": {
                "operationId": "schema_retrieve",
                "description": "OpenApi3 schema for this API. Format can be selected via content negotiation.\n\n- YAML: application/vnd.oai.openapi\n- JSON: application/vnd.oai.openapi+json",
                "parameters": [
                    {
                        "in": "query",
                        "name": "format",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "json",
                                "yaml"
                            ]
                        }
                    },
                    {
                        "in": "query",
                        "name": "lang",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "af",
                                "ar",
                                "ar-dz",
                                "ast",
                                "az",
                                "be",
                                "bg",
                                "bn",
                                "br",
                                "bs",
                                "ca",
                                "cs",
                                "cy",
                                "da",
                                "de",
                                "dsb",
                                "el",
                                "en",
                                "en-au",
                                "en-gb",
                                "eo",
                                "es",
                                "es-ar",
                                "es-co",
                                "es-mx",
                                "es-ni",
                                "es-ve",
                                "et",
                                "eu",
                                "fa",
                                "fi",
                                "fr",
                                "fy",
                                "ga",
                                "gd",
                                "gl",
                                "he",
                                "hi",
                                "hr",
                                "hsb",
                                "hu",
                                "hy",
                                "ia",
                                "id",
                                "ig",
                                "io",
                                "is",
                                "it",
                                "ja",
                                "ka",
                                "kab",
                                "kk",
                                "km",
                                "kn",
                                "ko",
                                "ky",
                                "lb",
                                "lt",
                                "lv",
                                "mk",
                                "ml",
                                "mn",
                                "mr",
                                "ms",
                                "my",
                                "nb",
                                "ne",
                                "nl",
                                "nn",
                                "os",
                                "pa",
                                "pl",
                                "pt",
                                "pt-br",
                                "ro",
                                "ru",
                                "sk",
                                "sl",
                                "sq",
                                "sr",
                                "sr-latn",
                                "sv",
                                "sw",
                                "ta",
                                "te",
                                "tg",
                                "th",
                                "tk",
                                "tr",
                                "tt",
                                "udm",
                                "uk",
                                "ur",
                                "uz",
                                "vi",
                                "zh-hans",
                                "zh-hant"
                            ]
                        }
                    }
                ],
                "tags": [
                    "schema"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/vnd.oai.openapi": {
                                "schema": {
                                    "type": "object"
                                }
                            },
                            "application/yaml": {
                                "schema": {
                                    "type": "object"
                                }
                            },
                            "application/vnd.oai.openapi+json": {
                                "schema": {
                                    "type": "object"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "Game": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "answer": {
                        "type": "string",
                        "readOnly": true,
                        "nullable": true
                    },
                    "state": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/GameState"
                            }
                        ],
                        "readOnly": true
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Result"
                        },
                        "readOnly": true
                    },
                    "alphabet": {
                        "type": "object",
                        "additionalProperties": {
                            "enum": [
                                "absent",
                                "present",
                                "correct"
                            ],
                            "type": "string"
                        },
                        "readOnly": true
                    }
                },
                "required": [
                    "alphabet",
                    "answer",
                    "id",
                    "results",
                    "state"
                ]
            },
            "GameState": {
                "enum": [
                    "playing",
                    "won",
                    "lost"
                ],
                "type": "string"
            },
            "Guess": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "word": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "game": {
                        "type": "integer"
                    }
                },
                "required": [
                    "created_at",
                    "game",
                    "id",
                    "word"
                ]
            },
            "GuessRequest": {
                "type": "object",
                "properties": {
                    "word": {
                        "type": "string"
                    },
                    "game": {
                        "type": "integer"
                    }
                },
                "required": [
                    "game",
                    "word"
                ]
            },
            "Letter": {
                "type": "object",
                "properties": {
                    "char": {
                        "type": "string",
                        "readOnly": true
                    },
                    "state": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/LetterState"
                            }
                        ],
                        "readOnly": true
                    }
                },
                "required": [
                    "char",
                    "state"
                ]
            },
            "LetterState": {
                "enum": [
                    "absent",
                    "present",
                    "correct"
                ],
                "type": "string"
            },
            "Result": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "letters": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Letter"
                        },
                        "readOnly": true
                    }
                },
                "required": [
                    "id",
                    "letters"
                ]
            }
        },
        "securitySchemes": {
            "basicAuth": {
                "type": "http",
                "scheme": "basic"
            },
            "cookieAuth": {
                "type": "apiKey",
                "in": "cookie",
                "name": "sessionid"
            }
        }
    }
}